input FlightInput {
    airline: String,
    countryFrom: String,
    countryTo: String,
    price: Float,
    hours: Int
}
input UserInput {
    userName: String,
    firstName: String,
    lastName: String,
    email: String,
    password: String
}
type Flight {
    id: ID!,
    airline: String,
    countryFrom: String,
    countryTo: String,
    price: Float,
    hours: Int
}
type User {
    id: ID!,
    userName: String,
    firstName: String,
    lastName: String,
    email: String,
    password: String
}
type Query {
    flight(countryFrom: String, countryTo: String): [Flight]!
    searchUser(userName: String, password: String): String!
}

type Mutation {
    createFlight(input:FlightInput): Flight
    createUser(input:UserInput): User
}



